<?php

namespace App\Repositories\Concrete;

use App\Models\%MODEL_NAME%;
use App\Repositories\Abstract\I%MODEL_NAME%Repository;
use Illuminate\Http\Request;
use Illuminate\Validation\Rule;

class %MODEL_NAME%Repository implements I%MODEL_NAME%Repository
{
    public function get_all()
    {
        return %MODEL_NAME%::get();
    }

    public function store(Request $request)
    {
        // validation
        $request->validate(%MODEL_NAME%::$validationRules);

        $%MODEL_NAME_CAMEL_CASE% = new %MODEL_NAME%();
        $%MODEL_NAME_CAMEL_CASE%->title = $request->title;
        $%MODEL_NAME_CAMEL_CASE%->body = $request->body;
        
        // save record, if can not save then return false
        $res = $%MODEL_NAME_CAMEL_CASE%->save();
        if (!$res) {
            return false;
        }

        return $%MODEL_NAME_CAMEL_CASE%;
    }

    public function update(Request $request)
    {
        // find or fail
        $%MODEL_NAME_CAMEL_CASE% = %MODEL_NAME%::find($request->id);
        if (!$%MODEL_NAME_CAMEL_CASE%)
            return 'none';

        // validation
        $request->validate(%MODEL_NAME%::$validationRules);

        $%MODEL_NAME_CAMEL_CASE%->title = $request->title;
        $%MODEL_NAME_CAMEL_CASE%->body = $request->body;

        // save record, if can not save then return false
        $res = $%MODEL_NAME_CAMEL_CASE%->save();
        if (!$res) {
            return false;
        }

        return $%MODEL_NAME_CAMEL_CASE%;
    }

    public function delete(Request $request)
    {
        $%MODEL_NAME_CAMEL_CASE% = %MODEL_NAME%::find($request->id);
        if (!$%MODEL_NAME_CAMEL_CASE%)
            return 'none';

        return $%MODEL_NAME_CAMEL_CASE%->delete();
    }

    public function get(Request $request)
    {
        $%MODEL_NAME_CAMEL_CASE% = %MODEL_NAME%::find($request->id);
        if (!$%MODEL_NAME_CAMEL_CASE%)
            return 'none';

        return $%MODEL_NAME_CAMEL_CASE%;
    }
}
